{
  "name": "gravatar",
  "description": "Gravatar Node.js library",
  "keywords": [
    "gravatar",
    "avatar",
    "package.json"
  ],
  "version": "1.3.0",
  "author": {
    "name": "Emerson Macedo",
    "email": "emerleite@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/emerleite/node-gravatar.git"
  },
  "devDependencies": {
    "mocha": "1.21.4",
    "should": "4.0.4"
  },
  "main": "index.js",
  "scripts": {
    "test": "node_modules/mocha/bin/mocha -R spec"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.8.0"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/emerleite/node-gravatar.png)](http://travis-ci.org/emerleite/node-gravatar)\n\nNode.js Gravatar library\n========================\nA library to generate Gravatar URLs in Node.js\nBased on gravatar specs - <http://en.gravatar.com/site/implement/hash/> and <http://en.gravatar.com/site/implement/images/>\n\nDependencies\n------------\n\n### Runtime\n* Node 0.8.X+\n\n### Development/Tests\n* mocha\n* should.js\n\nInstallation\n-----------\n```sh\n$ npm install gravatar\n```\n\nUsage\n------\n\n```javascript\nvar gravatar = require('gravatar');\ngravatar.url(email, options, protocol);\n```\n\n## Where:\n* email:\n  The gravatar email\n* options:\n  Query string options. Ex: size or s, default or d, rating or r, forcedefault or f.\n  Should be passed as an object. Ex: {s: 200, f: 'y', d: '404'}\n* protocol\n  Define if will use no protocol, http or https gravatar URL. Default is 'undefined', which generates URLs without protocol. True to force https and false to force http.\n\n### Examples\n\n```javascript\nvar gravatar = require('gravatar');\nvar url = gravatar.url('emerleite@gmail.com', {s: '200', r: 'pg', d: '404'});\n//returns //www.gravatar.com/avatar/93e9084aa289b7f1f5e4ab6716a56c3b?s=200&r=pg&d=404\nvar unsecureUrl = gravatar.url('emerleite@gmail.com', {s: '100', r: 'x', d: 'retro'}, false);\n//returns http://www.gravatar.com/avatar/93e9084aa289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro\nvar secureUrl = gravatar.url('emerleite@gmail.com', {s: '100', r: 'x', d: 'retro'}, true);\n//returns https://s.gravatar.com/avatar/93e9084aa289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro\n```\n\nRunning tests (3 ways)\n----------------------\n```sh\n$ npm test\n$ mocha (installed global)\n$ node_modules/mocha/bin/mocha\n```\n\nTo-Do\n-----\n* see (<https://github.com/emerleite/node-gravatar/issues>)\n\nAuthor\n------\n\n* Emerson Macedo (<http://emerleite.com/>)\n\nLicense:\n--------\n\n(The MIT License)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/emerleite/node-gravatar/issues"
  },
  "homepage": "https://github.com/emerleite/node-gravatar#readme",
  "_id": "gravatar@1.3.0",
  "_shasum": "9966fb1ede07a8009ea254326ed05b30181853ad",
  "_resolved": "https://registry.npmjs.org/gravatar/-/gravatar-1.3.0.tgz",
  "_from": "https://registry.npmjs.org/gravatar/-/gravatar-1.3.0.tgz"
}
