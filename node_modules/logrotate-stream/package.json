{
  "name": "logrotate-stream",
  "version": "0.2.5",
  "description": "Pipe log data to a stream, fuggetabout rotation",
  "main": "index.js",
  "bin": {
    "logrotate-stream": "./bin/logrotate-stream"
  },
  "scripts": {
    "test": "node test/logrotate-stream.js"
  },
  "author": {
    "name": "Drew Stokes"
  },
  "license": "BSD-2-Clause",
  "dependencies": {
    "byt": "~0.1.0",
    "log-rotate": "~0.2.2",
    "optimist": "~0.6.0"
  },
  "devDependencies": {
    "tape": "~2.1.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dstokes/logrotate-stream.git"
  },
  "keywords": [
    "log",
    "rotate",
    "pipe",
    "stream"
  ],
  "bugs": {
    "url": "https://github.com/dstokes/logrotate-stream/issues"
  },
  "readme": "logrotate-stream\n================\n\nA Writable Stream that supports linux logrotate style options\n\n[![Build Status](https://travis-ci.org/dstokes/logrotate-stream.png)](https://travis-ci.org/dstokes/logrotate-stream)\n[![Donate](http://img.shields.io/bitcoin/donate.png?color=blue)](https://www.coinbase.com/dstokes)  \n[![NPM](https://nodei.co/npm/logrotate-stream.png?downloads=true)](https://nodei.co/npm/logrotate-stream/)  \n\nexample\n=======\nOn the command line:\n``` sh\n  node app.js 2>&1 | logrotate-stream app.log --keep 3 --size '50m' --compress\n```\n\nAs a module:\n``` js\nvar stream = require('logrotate-stream')\n  , toLogFile = stream({ file: './test.log', size: '100k', keep: 3 });\n\nsomeStream.pipe(toLogFile);\n```\n\nthe problem\n===========\nRotating logs that are being written to with stdio redirection sucks. Using a\nutility like `logrotate` doesn't automagically update your processes log file \ndescriptor and you end up with several empty logs and one mega rotated log.\n\nThere's a couple ways to try and deal with this, but they all fall short:\n#### 1. Use `winston`'s log rotation feature for nodejs apps\n\nThis requires adding a new dependency and possibly code changes around logging\nlogic.\n\n#### 2. Restart your app on a process signal\n\nOften times, production apps can't be restarted willy-nilly\n\n#### 3. Use the `copytruncate` feature of `logrotate`\n\nThis only works if you don't need to guarantee that all of your log lines are\npersisted. `copytruncate` performs a non-atomic copy before truncating the\noriginal log, which means you can lose data in the process if the copy is slow.\n\n`logrotate-stream` tries to remedy this situation by acting as an intermediary\nbetween the application and the file system, piping `stdin` to log files and\nrotating those logfiles when necessary.\n\nupstart woes\n============\nIf you find yourself using logrotate-stream with upstart, there's a few things\nto consider. Piping to logrotate-stream in your `exec` line will cause upstart\nto track the pid of the logrotate process rather than your app. While stopping\nwill still work (most likely emitting an EPIPE error on your app before\nexiting), it would be better if you used a named pipe to redirect your apps output:\n```\nchdir /path/to/app\n\npre-start script\n  # create a named pipe\n  mkfifo logpipe\n  # create a backgrounded logrotate-stream process and\n  # redirect the named pipe data to it\n  logrotate-stream app.log --keep 3 --size 50m < logpipe &\nend script\n\n# start the app, redirecting stdout & stderr to the named pipe\nexec /usr/local/bin/node index.js > logpipe 2>&1\n```\n\nThis setup will register the correct pid with upstart, make sure your stdio\nis forwarded to logrotate-stream, and will properly kill the logrotate-stream\nprocess when your app is stopped.\n\noptions\n=======\n\n### file\nThe file log file to write data to.\n\n### size\nThe max file size of a log before rotation occurs. Supports `1024`, `1k`, `1m`, `1g`\n\n### keep\nThe number of rotated log files to keep (including the primary log file). \nAdditional logs are deleted no rotation.\n\n### compress\nOptionally compress rotated files with gzip.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install logrotate-stream\n```\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/dstokes/logrotate-stream#readme",
  "_id": "logrotate-stream@0.2.5",
  "_shasum": "fdd42e7982a7ee2eb86b55f5f23dcbffc66e6990",
  "_resolved": "https://registry.npmjs.org/logrotate-stream/-/logrotate-stream-0.2.5.tgz",
  "_from": "https://registry.npmjs.org/logrotate-stream/-/logrotate-stream-0.2.5.tgz"
}
