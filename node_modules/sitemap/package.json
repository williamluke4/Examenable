{
  "name": "sitemap",
  "version": "1.1.0",
  "description": "Sitemap-generating framework",
  "keywords": [
    "sitemap",
    "sitemap.xml"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/ekalinin/sitemap.js.git"
  },
  "author": {
    "name": "Eugene Kalinin",
    "email": "e.v.kalinin@gmail.com"
  },
  "dependencies": {
    "underscore": "^1.7.0"
  },
  "devDependencies": {
    "expresso": "^0.9.2"
  },
  "main": "index",
  "scripts": {
    "test": "./node_modules/expresso/bin/expresso tests/sitemap.test.js"
  },
  "readme": "sitemap.js\n==========\n\n**sitemap.js** is a high-level sitemap-generating framework that\nmakes creating [sitemap XML](http://www.sitemaps.org/) files easy.\n\nTable of Contents\n=================\n\n  * [sitemap.js](#sitemapjs)\n    * [Installation](#installation)\n    * [Usage](#usage)\n      * [Example of using sitemap.js with <a href=\"https://github.com/visionmedia/express\">express</a>:](#example-of-using-sitemapjs-with-express)\n      * [Example of synchronous sitemap.js usage:](#example-of-synchronous-sitemapjs-usage)\n      * [Example of dynamic page manipulations into sitemap:](#example-of-dynamic-page-manipulations-into-sitemap)\n      * [Example of pre-generating sitemap based on existing static files:](#example-of-pre-generating-sitemap-based-on-existing-static-files)\n      * [Example of indicating alternate language pages:](#example-of-indicating-alternate-language-pages)\n    * [License](#license)\n\nCreated by [gh-md-toc](https://github.com/ekalinin/github-markdown-toc)\n\nInstallation\n------------\n\nIt's recommended to install via [npm](https://github.com/isaacs/npm/):\n\n    npm install --save sitemap\n\nUsage\n-----\nThe main functions you want to use in the sitemap module are\n\n```javascript\nvar sm = require('sitemap')\n// Creates a sitemap object given the input configuration with URLs\nvar sitemap = sm.createSitemap({ options });\n// Generates XML with a callback function\nsitemap.toXML( function(xml){ console.log(xml) });\n// Gives you a string containing the XML data\nvar xml = sitemap.toString();\n```\n\n###Example of using sitemap.js with [express](https://github.com/visionmedia/express):\n\n```javascript\nvar express = require('express')\n  , sm = require('sitemap');\n\nvar app = express()\n  , sitemap = sm.createSitemap ({\n      hostname: 'http://example.com',\n      cacheTime: 600000,        // 600 sec - cache purge period\n      urls: [\n        { url: '/page-1/',  changefreq: 'daily', priority: 0.3 },\n        { url: '/page-2/',  changefreq: 'monthly',  priority: 0.7 },\n        { url: '/page-3/'},    // changefreq: 'weekly',  priority: 0.5\n        { url: '/page-4/',   img: \"http://urlTest.com\" }\n      ]\n    });\n\napp.get('/sitemap.xml', function(req, res) {\n  sitemap.toXML( function (xml) {\n      res.header('Content-Type', 'application/xml');\n      res.send( xml );\n  });\n});\n\napp.listen(3000);\n```\n\n###Example of synchronous sitemap.js usage:\n\n```javascript\nvar express = require('express')\n  , sm = require('sitemap');\n\nvar app = express()\n  , sitemap = sm.createSitemap ({\n      hostname: 'http://example.com',\n      cacheTime: 600000,  // 600 sec cache period\n      urls: [\n        { url: '/page-1/',  changefreq: 'daily', priority: 0.3 },\n        { url: '/page-2/',  changefreq: 'monthly',  priority: 0.7 },\n        { url: '/page-3/' } // changefreq: 'weekly',  priority: 0.5\n      ]\n    });\n\napp.get('/sitemap.xml', function(req, res) {\n  res.header('Content-Type', 'application/xml');\n  res.send( sitemap.toString() );\n});\n\napp.listen(3000);\n```\n\n###Example of dynamic page manipulations into sitemap:\n\n```javascript\nvar sitemap = sm.createSitemap ({\n      hostname: 'http://example.com',\n      cacheTime: 600000\n    });\nsitemap.add({url: '/page-1/'});\nsitemap.add({url: '/page-2/', changefreq: 'monthly', priority: 0.7});\nsitemap.del({url: '/page-2/'});\nsitemap.del('/page-1/');\n```\n\n\n\n###Example of pre-generating sitemap based on existing static files:\n\n```javascript\nvar sm = require('sitemap')\n    , fs = require('fs');\n\nvar sitemap = sm.createSitemap({\n    hostname: 'http://www.mywebsite.com',\n    cacheTime: 600000,  //600 sec (10 min) cache purge period\n    urls: [\n        { url: '/' , changefreq: 'weekly', priority: 0.8, lastmodrealtime: true, lastmodfile: 'app/assets/index.html' },\n        { url: '/page1', changefreq: 'weekly', priority: 0.8, lastmodrealtime: true, lastmodfile: 'app/assets/page1.html' },\n        { url: '/page2'    , changefreq: 'weekly', priority: 0.8, lastmodrealtime: true, lastmodfile: 'app/templates/page2.hbs' } /* useful to monitor template content files instead of generated static files */\n    ]\n});\n\nfs.writeFileSync(\"app/assets/sitemap.xml\", sitemap.toString());\n```\n\n###Example of indicating alternate language pages:\n\n[Description](https://support.google.com/webmasters/answer/2620865?hl=en) in\nthe google's Search Console Help.\n\n```javascript\nvar sm = sm.createSitemap({\n      urls: [{\n        url: 'http://test.com/page-1/',\n        changefreq: 'weekly',\n        priority: 0.3,\n        links: [\n          { lang: 'en', url: 'http://test.com/page-1/', },\n          { lang: 'ja', url: 'http://test.com/page-1/ja/', },\n        ]\n      },]\n    });\n```\n\nLicense\n-------\n\nSee [LICENSE](https://github.com/ekalinin/sitemap.js/blob/master/LICENSE)\nfile.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ekalinin/sitemap.js/issues"
  },
  "homepage": "https://github.com/ekalinin/sitemap.js#readme",
  "_id": "sitemap@1.1.0",
  "_shasum": "0630edc2859fdb838c572391feb05b8df1474802",
  "_resolved": "https://registry.npmjs.org/sitemap/-/sitemap-1.1.0.tgz",
  "_from": "https://registry.npmjs.org/sitemap/-/sitemap-1.1.0.tgz"
}
