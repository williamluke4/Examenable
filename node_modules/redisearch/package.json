{
  "name": "redisearch",
  "license": "MIT",
  "description": "A plugin to search data with redis",
  "version": "0.0.4",
  "repository": {
    "type": "git",
    "url": "https://github.com/barisusakli/redis-search/"
  },
  "main": "index.js",
  "scripts": {
    "test": "mocha test"
  },
  "dependencies": {
    "redis": "^0.12.1",
    "async": "~0.9.0",
    "natural": "^0.2.0"
  },
  "devDependencies": {
    "mocha": "~2.1.0"
  },
  "bugs": {
    "url": "https://github.com/barisusakli/redis-search/issues"
  },
  "engines": {
    "node": ">=0.10"
  },
  "maintainers": [
    {
      "name": "Barış Soner Uşaklı",
      "email": "barisusakli@gmail.com",
      "url": "https://github.com/barisusakli"
    }
  ],
  "readme": "# redis-search\r\nIndex and search data in redis\r\n\r\nInspired by https://github.com/tj/reds\r\n\r\nDifferences :\r\n\r\n   query on extra fields\r\n\r\nHow to use :\r\n\r\n```\r\nvar redisSearch = require('redisSearch');\r\n\r\nvar postSearch = redisSearch.createSearch('mypostsearch', [redisClient]);\r\n```\r\n\r\nIndexing: `postSearch.index(data, id, callback);`\r\n\r\n```\r\n// index some stuff, the string field must be named `content` others can be anything\r\npostSearch.index({content: 'ruby emerald', uid: 5, cid: 1}, 1, next);\r\npostSearch.index({content: 'emerald orange emerald', uid: 5, cid: 2}, 2, next);\r\npostSearch.index({content: 'cucumber apple orange', uid: 4, cid: 2}, 3, next);\r\npostSearch.index({content: 'orange apple pear', uid: 5, cid: 4}, 4, next);\r\npostSearch.index({content: 'dog cat', uid: 6, cid: 4}, 5, next);\r\n```\r\n\r\nSearch `postSearch.query(data, callback);`\r\n\r\n```\r\npostSearch.query({content: \"orange\", uid: 5, cid: 2}, function(err, ids) {\r\n    console.log(ids); // [\"2\"]\r\n});\r\n```\r\n\r\nRemove from index: `postSearch.remove(id);`\r\n\r\n```\r\npostSearch.remove(3);\r\n```\r\n\r\n\r\nOther examples:\r\n\r\n```\r\n// search for ids where content contains `orange` and cid is 2 or 4\r\npostSearch.query({content: \"orange\", cid: [2,4]}, callback);\r\n\r\n// search for ids where uid is 5 and return 3 results\r\npostSearch.query({uid: 5}, 0, 2);\r\n```\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "redisearch@0.0.4",
  "_shasum": "5cfd20a4cf976501a0c75475c916b8b0b17ad608",
  "_resolved": "https://registry.npmjs.org/redisearch/-/redisearch-0.0.4.tgz",
  "_from": "https://registry.npmjs.org/redisearch/-/redisearch-0.0.4.tgz"
}
